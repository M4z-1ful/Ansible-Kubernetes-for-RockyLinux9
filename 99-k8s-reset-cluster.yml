---
- name: Reset Kubernetes Cluster and Remove All Components
  hosts: all
  become: yes
  # any_errors_fatal: true
  gather_facts: yes
  vars:
    force_reset: false  # Set to true to force reset even if cluster is not found
  
  tasks:
    - name: Check if kubeadm is installed
      command: which kubeadm
      register: kubeadm_exists
      failed_when: false
      changed_when: false

    - name: Check if kubectl is installed
      command: which kubectl
      register: kubectl_exists
      failed_when: false
      changed_when: false

    - name: Check if cluster is initialized
      stat:
        path: /etc/kubernetes/admin.conf
      register: cluster_exists

    - name: Display cluster status
      debug:
        msg: |
          Kubeadm installed: {{ kubeadm_exists.rc == 0 }}
          Kubectl installed: {{ kubectl_exists.rc == 0 }}
          Cluster initialized: {{ cluster_exists.stat.exists }}

    # Step 1: Reset Kubernetes cluster using kubeadm
    - name: Reset Kubernetes cluster with kubeadm
      command: kubeadm reset -f
      register: kubeadm_reset_result
      when: kubeadm_exists.rc == 0 and (cluster_exists.stat.exists or force_reset)
      ignore_errors: yes

    - name: Display kubeadm reset result
      debug:
        var: kubeadm_reset_result
      when: kubeadm_reset_result is defined

    # Step 2: Stop and disable Kubernetes services
    - name: Stop and disable kubelet service
      systemd:
        name: kubelet
        state: stopped
        enabled: no
      ignore_errors: yes

    - name: Stop and disable containerd service
      systemd:
        name: containerd
        state: stopped
        enabled: no
      ignore_errors: yes

    # Step 3: Remove Kubernetes packages
    - name: Remove Kubernetes packages (kubectl, kubeadm, kubelet)
      dnf:
        name:
          - kubectl
          - kubeadm
          - kubelet
        state: absent
      ignore_errors: yes

    # Step 4: Remove container runtime
    - name: Remove containerd package
      dnf:
        name: containerd.io
        state: absent
      ignore_errors: yes

    # Step 5: Clean up Kubernetes directories and files
    - name: Remove Kubernetes configuration directories
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/kubernetes
        - /var/lib/kubelet
        - /var/lib/etcd
        - /etc/cni/net.d
        - /opt/cni/bin
        - /var/lib/cni
      ignore_errors: yes

    - name: Remove containerd configuration
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/containerd
        - /var/lib/containerd
      ignore_errors: yes

    - name: Remove kubeconfig from user home directories
      file:
        path: "{{ item }}/.kube"
        state: absent
      loop:
        - /root
        - /home/kube
      ignore_errors: yes

    # Step 6: Remove repository files
    - name: Remove Kubernetes repository file
      file:
        path: /etc/yum.repos.d/kubernetes.repo
        state: absent
      ignore_errors: yes

    - name: Remove Docker repository file
      file:
        path: /etc/yum.repos.d/docker-ce.repo
        state: absent
      ignore_errors: yes

    # Step 7: Remove network and kernel module configurations
    - name: Remove containerd modules configuration
      file:
        path: /etc/modules-load.d/containerd.conf
        state: absent
      ignore_errors: yes

    - name: Remove Kubernetes network settings
      file:
        path: /etc/sysctl.d/99-kubernetes-cri.conf
        state: absent
      ignore_errors: yes

    # Step 8: Unload kernel modules
    - name: Unload br_netfilter module
      modprobe:
        name: br_netfilter
        state: absent
      ignore_errors: yes

    - name: Unload overlay module
      modprobe:
        name: overlay
        state: absent
      ignore_errors: yes

    # Step 9: Clean up iptables rules (optional, but recommended)
    - name: Flush iptables rules
      command: "{{ item }}"
      loop:
        - iptables -F
        - iptables -t nat -F
        - iptables -t mangle -F
        - iptables -X
        - iptables -t nat -X
        - iptables -t mangle -X
      ignore_errors: yes

    # Step 10: Clean up network interfaces created by Kubernetes
    - name: Remove CNI network interfaces
      shell: |
        # Remove any flannel/calico/weave interfaces
        for iface in $(ip link show | grep -E "(cni|flannel|calico|weave)" | awk -F': ' '{print $2}' | awk -F'@' '{print $1}'); do
          ip link delete $iface 2>/dev/null || true
        done
        # Remove docker bridge if exists
        ip link delete docker0 2>/dev/null || true
      ignore_errors: yes

    # Step 11: Clean up /etc/hosts entries (added by playbook 02)
    - name: Remove cluster node entries from /etc/hosts
      blockinfile:
        path: /etc/hosts
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        state: absent
      ignore_errors: yes

    # Step 12: Remove kube user and related configurations
    - name: Remove kube user from sudoers
      lineinfile:
        dest: /etc/sudoers
        line: 'kube ALL=(ALL) NOPASSWD: ALL'
        state: absent
      ignore_errors: yes

    - name: Remove kube user account
      user:
        name: kube
        state: absent
        remove: yes
        force: yes
      ignore_errors: yes

    # Step 13: Clean up any remaining processes
    - name: Check for running Kubernetes and container processes
      shell: |
        pgrep -f "{{ item }}" || true
      register: process_check
      failed_when: false
      changed_when: false
      loop:
        - containerd
        - kubelet
        - kube-proxy
        - kube-scheduler
        - kube-controller-manager
        - kube-apiserver
        - etcd

    - name: Kill remaining Kubernetes and container processes
      shell: |
        if pgrep -f "{{ item }}" > /dev/null 2>&1; then
          echo "Killing {{ item }} processes..."
          pkill -f "{{ item }}" || true
          sleep 1
        else
          echo "No {{ item }} processes found"
        fi
      register: kill_result
      failed_when: false
      changed_when: kill_result.stdout is search("Killing")
      loop:
        - containerd
        - kubelet
        - kube-proxy
        - kube-scheduler
        - kube-controller-manager
        - kube-apiserver
        - etcd

    # Step 14: Clean package cache
    - name: Clean DNF package cache
      command: dnf clean all
      ignore_errors: yes

    # Step 15: Reboot recommendation
    - name: Display reboot recommendation
      debug:
        msg: |
          ============================================================
          Kubernetes cluster reset completed!
          
          The following actions were performed:
          - Reset Kubernetes cluster with kubeadm
          - Removed all Kubernetes packages
          - Removed containerd runtime
          - Cleaned up configuration files and directories
          - Removed network configurations
          - Removed kube user account
          - Cleaned up iptables rules
          
          RECOMMENDATION: Reboot all nodes to ensure complete cleanup
          Run: ansible all -i inventory.ini -m reboot -b
          ============================================================

- name: Verify Reset Completion
  hosts: all
  become: yes
  tasks:
    - name: Verify kubeadm is removed
      command: which kubeadm
      register: verify_kubeadm
      failed_when: false
      changed_when: false

    - name: Verify kubectl is removed
      command: which kubectl
      register: verify_kubectl
      failed_when: false
      changed_when: false

    - name: Verify kubelet is removed
      command: which kubelet
      register: verify_kubelet
      failed_when: false
      changed_when: false

    - name: Verify containerd is removed
      command: which containerd
      register: verify_containerd
      failed_when: false
      changed_when: false

    - name: Check if kube user exists
      user:
        name: kube
        state: present
      register: verify_user
      failed_when: false
      check_mode: yes

    - name: Display verification results
      debug:
        msg: |
          Verification Results:
          - kubeadm removed: {{ verify_kubeadm.rc != 0 }}
          - kubectl removed: {{ verify_kubectl.rc != 0 }}
          - kubelet removed: {{ verify_kubelet.rc != 0 }}
          - containerd removed: {{ verify_containerd.rc != 0 }}
          - kube user removed: {{ verify_user.uid is not defined }}
          
          {% if verify_kubeadm.rc == 0 or verify_kubectl.rc == 0 or verify_kubelet.rc == 0 or verify_containerd.rc == 0 %}
          WARNING: Some components may still be present. Check manually.
          {% else %}
          SUCCESS: All Kubernetes components have been removed.
          {% endif %}
