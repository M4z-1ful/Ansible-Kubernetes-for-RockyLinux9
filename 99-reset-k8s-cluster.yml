---
- hosts: masters,workers
  become: yes
  any_errors_fatal: false
  ignore_errors: yes
  tasks:
    - name: Display reset warning
      debug:
        msg: |
          ============================================================
          WARNING: This will completely reset Kubernetes installation
          ============================================================
          - Stop all Kubernetes services
          - Remove all Kubernetes packages  
          - Clean up all configuration files
          - Remove network interfaces
          - Remove user account and SSH keys
          - Reset iptables rules
          ============================================================

    - name: Reset Kubernetes cluster (if initialized)
      command: kubeadm reset --force
      ignore_errors: yes

    - name: Kill all Kubernetes and container processes forcefully
      shell: |
        # Kill all kubernetes processes
        pkill -9 -f kubelet 2>/dev/null || true
        pkill -9 -f kube-proxy 2>/dev/null || true
        pkill -9 -f kube-apiserver 2>/dev/null || true
        pkill -9 -f kube-controller 2>/dev/null || true
        pkill -9 -f kube-scheduler 2>/dev/null || true
        pkill -9 -f etcd 2>/dev/null || true
        
        # Kill all containerd processes
        pkill -9 -f containerd-shim 2>/dev/null || true
        pkill -9 -f containerd 2>/dev/null || true
        pkill -9 -f runc 2>/dev/null || true
        pkill -9 -f cri 2>/dev/null || true
        
        # Wait a moment for processes to die
        sleep 3
      ignore_errors: yes

    - name: Stop and disable kubelet service
      systemd:
        name: kubelet
        state: stopped
        enabled: no
      ignore_errors: yes

    - name: Stop and disable containerd service
      systemd:
        name: containerd
        state: stopped
        enabled: no
      ignore_errors: yes

    - name: Remove containerd packages completely
      dnf:
        name:
          - containerd.io
          - containerd
        state: absent
      ignore_errors: yes

    - name: Remove all containerd binaries manually
      shell: |
        rm -f /usr/bin/containerd* 2>/dev/null || true
        rm -f /usr/local/bin/containerd* 2>/dev/null || true
        rm -f /opt/containerd/bin/* 2>/dev/null || true
      ignore_errors: yes

    - name: Kill all containerd processes
      shell: |
        pkill -f containerd 2>/dev/null || true
        pkill -f containerd-shim 2>/dev/null || true
        pkill -f runc 2>/dev/null || true
        sleep 2
      ignore_errors: yes

    - name: Unmount containerd filesystems
      shell: |
        # Unmount any containerd related mounts
        mount | grep containerd | awk '{print $3}' | xargs -r umount -f 2>/dev/null || true
        mount | grep /var/lib/containerd | awk '{print $3}' | xargs -r umount -f 2>/dev/null || true
        # Unmount overlay filesystems
        mount | grep overlay | awk '{print $3}' | xargs -r umount -f 2>/dev/null || true
      ignore_errors: yes

    - name: Remove Kubernetes packages
      dnf:
        name:
          - kubelet
          - kubeadm
          - kubectl
          - containerd.io
        state: absent
      ignore_errors: yes

    - name: Remove Kubernetes configuration directories
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/kubernetes
        - /var/lib/kubelet
        - /var/lib/kubeadm
        - /var/lib/etcd
        - /etc/containerd
        - /var/lib/containerd
        - /run/containerd
        - /opt/containerd
        - /etc/crictl.yaml
        - /var/lib/cni
        - /etc/cni
        - /opt/cni
        - /run/flannel
        - /var/run/secrets
      ignore_errors: yes

    - name: Force remove stubborn directories
      shell: |
        # Stop any remaining services first
        systemctl stop kubelet containerd 2>/dev/null || true
        
        # Kill any remaining processes
        fuser -k /var/lib/containerd 2>/dev/null || true
        fuser -k /run/containerd 2>/dev/null || true
        fuser -k /var/lib/kubelet 2>/dev/null || true
        
        # Unmount everything containerd/kubelet related
        mount | grep containerd | awk '{print $3}' | xargs -r umount -f 2>/dev/null || true
        mount | grep kubelet | awk '{print $3}' | xargs -r umount -f 2>/dev/null || true
        mount | grep overlay | awk '{print $3}' | xargs -r umount -f 2>/dev/null || true
        
        # Force remove directories
        rm -rf /var/lib/containerd 2>/dev/null || true
        rm -rf /run/containerd 2>/dev/null || true
        rm -rf /var/lib/kubelet 2>/dev/null || true
        rm -rf /etc/kubernetes 2>/dev/null || true
        rm -rf /etc/containerd 2>/dev/null || true
        
        # Remove socket files
        rm -f /var/run/containerd/containerd.sock 2>/dev/null || true
        rm -f /run/containerd/containerd.sock 2>/dev/null || true
        
        # Wait for cleanup
        sleep 2
      ignore_errors: yes

    - name: Remove Kubernetes repository files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/yum.repos.d/kubernetes.repo
        - /etc/yum.repos.d/docker-ce.repo
      ignore_errors: yes

    - name: Remove kernel modules configuration
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/modules-load.d/containerd.conf
        - /etc/modules-load.d/k8s.conf
      ignore_errors: yes

    - name: Remove sysctl configurations
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/sysctl.d/k8s.conf
        - /etc/sysctl.d/99-kubernetes-cri.conf
      ignore_errors: yes

    - name: Remove network interfaces
      shell: |
        # Remove CNI interfaces
        ip link delete cni0 2>/dev/null || true
        ip link delete flannel.1 2>/dev/null || true
        ip link delete docker0 2>/dev/null || true
        
        # Remove virtual ethernet interfaces
        for iface in $(ip link show | grep veth | awk '{print $2}' | cut -d':' -f1); do
          ip link delete $iface 2>/dev/null || true
        done
      ignore_errors: yes

    - name: Clean up iptables rules (Kubernetes related)
      shell: |
        # Flush all chains
        iptables -F
        iptables -X
        iptables -t nat -F
        iptables -t nat -X
        iptables -t mangle -F
        iptables -t mangle -X
        
        # Reset to default policies
        iptables -P INPUT ACCEPT
        iptables -P FORWARD ACCEPT
        iptables -P OUTPUT ACCEPT
      ignore_errors: yes

    - name: Remove Docker/containerd GPG keys
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/pki/rpm-gpg/docker-ce-gpg
        - /etc/pki/rpm-gpg/kubernetes-gpg
      ignore_errors: yes

    - name: Clean package cache and remove orphaned packages
      shell: |
        dnf autoremove -y 2>/dev/null || true
        dnf clean all 2>/dev/null || true
        # Remove any leftover kubernetes related packages
        rpm -qa | grep -i kube | xargs -r rpm -e --nodeps 2>/dev/null || true
        rpm -qa | grep -i containerd | xargs -r rpm -e --nodeps 2>/dev/null || true
      ignore_errors: yes

    - name: Remove systemd service files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/systemd/system/kubelet.service
        - /etc/systemd/system/kubelet.service.d
        - /usr/lib/systemd/system/kubelet.service
        - /etc/systemd/system/containerd.service
        - /usr/lib/systemd/system/containerd.service
        - /etc/systemd/system/multi-user.target.wants/kubelet.service
        - /etc/systemd/system/multi-user.target.wants/containerd.service
      ignore_errors: yes

    - name: Clean systemd cache and reload daemon
      shell: |
        # Stop and disable all services
        systemctl stop kubelet containerd 2>/dev/null || true
        systemctl disable kubelet containerd 2>/dev/null || true
        
        # Remove service files
        rm -f /etc/systemd/system/kubelet.service* 2>/dev/null || true
        rm -f /etc/systemd/system/containerd.service* 2>/dev/null || true
        rm -f /usr/lib/systemd/system/kubelet.service* 2>/dev/null || true
        rm -f /usr/lib/systemd/system/containerd.service* 2>/dev/null || true
        rm -f /etc/systemd/system/multi-user.target.wants/kubelet.service 2>/dev/null || true
        rm -f /etc/systemd/system/multi-user.target.wants/containerd.service 2>/dev/null || true
        
        # Reload systemd
        systemctl daemon-reload
        systemctl reset-failed 2>/dev/null || true
      ignore_errors: yes

    - name: Completely purge Docker repository and GPG keys
      shell: |
        # Remove repository files
        rm -f /etc/yum.repos.d/docker*.repo 2>/dev/null || true
        rm -f /etc/yum.repos.d/kubernetes*.repo 2>/dev/null || true
        
        # Remove GPG keys
        rpm --import /dev/null 2>/dev/null || true
        rpm -e gpg-pubkey-* 2>/dev/null || true
        
        # Clear repository cache
        dnf clean all 2>/dev/null || true
        rm -rf /var/cache/dnf/* 2>/dev/null || true
      ignore_errors: yes

    - name: Remove kube user from sudoers
      lineinfile:
        dest: /etc/sudoers
        line: 'kube ALL=(ALL) NOPASSWD: ALL'
        state: absent
      ignore_errors: yes

    - name: Remove kube user account
      user:
        name: kube
        state: absent
        remove: yes
        force: yes
      ignore_errors: yes

    - name: Remove kube user home directory (if exists)
      file:
        path: /home/kube
        state: absent
      ignore_errors: yes

    - name: Unload kernel modules
      shell: |
        modprobe -r overlay 2>/dev/null || true
        modprobe -r br_netfilter 2>/dev/null || true
      ignore_errors: yes

    - name: Remove any remaining Kubernetes processes
      shell: |
        pkill -f kubelet 2>/dev/null || true
        pkill -f kube-proxy 2>/dev/null || true
        pkill -f kube-apiserver 2>/dev/null || true
        pkill -f kube-controller 2>/dev/null || true
        pkill -f kube-scheduler 2>/dev/null || true
        pkill -f etcd 2>/dev/null || true
        pkill -f containerd 2>/dev/null || true
        pkill -f containerd-shim 2>/dev/null || true
      ignore_errors: yes

    - name: Clean up /etc/hosts entries (remove cluster nodes)
      lineinfile:
        path: /etc/hosts
        regexp: '.*k8s-.*'
        state: absent
      ignore_errors: yes

    - name: Remove swap disable setting from /etc/fstab (restore swap if it was disabled)
      lineinfile:
        path: /etc/fstab
        regexp: '^#.*swap.*'
        line: '\1'
        backrefs: yes
      ignore_errors: yes

    - name: Final cleanup and verification
      shell: |
        # Remove any remaining kubernetes or containerd processes
        ps aux | grep -E 'kube|containerd|etcd' | grep -v grep | awk '{print $2}' | xargs -r kill -9 2>/dev/null || true
        
        # Clean up any remaining mounts
        mount | grep -E 'kubelet|containerd|overlay' | awk '{print $3}' | xargs -r umount -f 2>/dev/null || true
        
        # Remove any remaining network namespaces
        ip netns list 2>/dev/null | xargs -r -I {} ip netns delete {} 2>/dev/null || true
        
        # Clean up any remaining cgroup mounts
        mount | grep cgroup | grep kubelet | awk '{print $3}' | xargs -r umount -f 2>/dev/null || true
        
        # Remove any remaining kubernetes related files in /tmp
        rm -rf /tmp/kube* 2>/dev/null || true
        rm -rf /tmp/*kubeadm* 2>/dev/null || true
        
        # Clear any remaining iptables rules more thoroughly
        iptables -t filter -F 2>/dev/null || true
        iptables -t filter -X 2>/dev/null || true
        iptables -t nat -F 2>/dev/null || true
        iptables -t nat -X 2>/dev/null || true
        iptables -t mangle -F 2>/dev/null || true
        iptables -t mangle -X 2>/dev/null || true
        iptables -t raw -F 2>/dev/null || true
        iptables -t raw -X 2>/dev/null || true
      ignore_errors: yes

    - name: Display reset completion
      debug:
        msg: |
          ============================================================
          ✅ KUBERNETES RESET COMPLETED on {{ inventory_hostname }}
          ============================================================
          The following have been removed/reset:
          - Kubernetes cluster membership
          - All Kubernetes packages (kubelet, kubeadm, kubectl, containerd)
          - All configuration files and directories
          - Network interfaces and iptables rules
          - Systemd services and files
          - Repository configurations
          - User account 'kube'
          - Kernel modules and sysctl settings
          ============================================================
          Node is now ready for fresh Kubernetes installation
          ============================================================

- hosts: localhost
  become: no
  tasks:
    - name: Remove local join-command.txt file
      file:
        path: ./join-command.txt
        state: absent
      ignore_errors: yes

    - name: Display final message
      debug:
        msg: |
          ============================================================
          🎯 COMPLETE KUBERNETES ENVIRONMENT RESET FINISHED
          ============================================================
          All nodes have been reset to pre-installation state.
          
          To reinstall Kubernetes:
          1. Verify inventory.ini configuration
          2. Run: ./run-k8s-install.sh
          
          Or run step by step:
          1. ansible-playbook -i inventory.ini 01-user-create.yml
          2. ansible-playbook -i inventory.ini 02-k8s-install.yml  
          3. ansible-playbook -i inventory.ini 03-k8s-init-cluster.yml
          4. ansible-playbook -i inventory.ini 04-k8s-check-cluster.yml
          ============================================================
