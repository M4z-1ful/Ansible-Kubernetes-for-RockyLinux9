---
- hosts: masters
  become: yes
  tasks:
    - name: Initialize Kubernetes cluster with kubeadm init
      command: >
        kubeadm init
        --apiserver-advertise-address={{ ansible_host }}
        --pod-network-cidr={{ pod_network_cidr }}
      register: kubeadm_init_result
      failed_when: kubeadm_init_result.rc != 0 and "already exists" not in kubeadm_init_result.stderr

    - name: Extract join command from kubeadm init output
      set_fact:
        join_command: "{{ kubeadm_init_result.stdout_lines | select('match', '^kubeadm join.*') | first }}"
      when: kubeadm_init_result.stdout_lines is defined

    - name: Extract join token argument
      set_fact:
        join_token_arg: "{{ kubeadm_init_result.stdout_lines | select('match', '.*--token.*') | first | regex_search('--token [^ ]+') }}"
      when: kubeadm_init_result.stdout_lines is defined

    - name: Extract discovery token ca cert hash argument
      set_fact:
        join_hash_arg: "{{ kubeadm_init_result.stdout_lines | select('match', '.*--discovery-token-ca-cert-hash.*') | first | regex_search('--discovery-token-ca-cert-hash [^ ]+') }}"
      when: kubeadm_init_result.stdout_lines is defined

    - name: Set up kubeconfig for kubectl
      shell: |
        mkdir -p $HOME/.kube
        cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        chown $(id -u):$(id -g) $HOME/.kube/config
      when: kubeadm_init_result.rc == 0

    - name: Install Calico network plugin
      command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      when: kubeadm_init_result.rc == 0

    - name: Display join command for reference
      debug:
        msg: "Join command: kubeadm join {{ ansible_host }}:6443 {{ join_token_arg }} {{ join_hash_arg }}"
      when: join_token_arg is defined and join_hash_arg is defined

- hosts: workers
  become: yes
  tasks:
    - name: Join worker nodes to Kubernetes cluster
      command: >
        kubeadm join {{ hostvars[groups['masters'][0]]['ansible_host'] }}:6443
        {{ hostvars[groups['masters'][0]]['join_token_arg'] }}
        {{ hostvars[groups['masters'][0]]['join_hash_arg'] }}
      register: join_result
      failed_when: join_result.rc != 0 and "already exists" not in join_result.stderr
      when: hostvars[groups['masters'][0]]['join_token_arg'] is defined

    - name: Display join result
      debug:
        var: join_result
      when: join_result is defined
